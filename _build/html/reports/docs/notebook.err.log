Traceback (most recent call last):
  File "/home/marit/anaconda3/envs/jupyterbook/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/marit/anaconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/marit/anaconda3/envs/jupyterbook/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/marit/anaconda3/envs/jupyterbook/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/marit/anaconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/marit/anaconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/marit/anaconda3/envs/jupyterbook/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from jupyter_dash import JupyterDash

custom_colorscale = [
    [0, 'red'],  # Assign red to the lowest value (0)
    [1, 'darkblue']  # Assign dark blue to the highest value (12)
]

zmin = 0
zmax = 12

# Bereken het gemiddelde aantal punten dat landen aan elkaar hebben gegeven
average_points = euro_df.groupby(['From country', 'To country'])['Points'].mean().reset_index()


# app = dash.Dash(__name__)
app = JupyterDash(__name__)

app.layout = html.Div(id = 'parent', children = [
    html.H1(id = 'H1',
            children = 'Gemiddeld aantal punten per land', 
            style = {'textAlign':'center',
                     'marginBottom':0, 
                     'font-family':'sans-serif',
                     'background-color':'white'}),

        dcc.Dropdown(id = 'dropdown',
                     multi=True,
                     style = {'font-family': 'sans-serif'},
                     options = list(set(average_points['From country'])),
                     value = ['The Netherlands', 'Belgium', 'France', 'Germany', 'Luxembourg']),
                     dcc.Graph(id = 'bar_plot')
    ])
   
   
@app.callback(Output(component_id='bar_plot', component_property= 'figure'),
              [Input(component_id='dropdown', component_property= 'value')])

def graph_update(dropdown_value):
    # Filter the dataframe based on the selected countries
    filtered_df = average_points[average_points['From country'].isin(dropdown_value)]

    # Create a pivot table from the filtered dataframe
    pivot_table = filtered_df.pivot_table(values='Points', index='From country', columns='To country')

    # Reorder the pivot table based on the selected countries
    pivot_table = pivot_table.reindex(columns=dropdown_value, index=dropdown_value)

    # Create the heatmap figure
    hittekaart_punten = go.Figure(data=go.Heatmap(
        y=pivot_table.columns,
        x=pivot_table.index,
        z=pivot_table.values,
        zmin=zmin,
        zmax=zmax,
        colorscale=custom_colorscale
    ))

    # Customize the layout of the heatmap figure
    hittekaart_punten.update_layout(
        title='Gemiddeld aantal punten voor {}'.format(', '.join(dropdown_value)),
        xaxis_title='Uitdelende land',
        yaxis_title='Ontvangende land'
    )

    return hittekaart_punten
if __name__ == '__main__':
    app.run_server()

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[4], line 1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mjupyter_dash[39;00m [38;5;28;01mimport[39;00m JupyterDash
[1;32m      3[0m custom_colorscale [38;5;241m=[39m [
[1;32m      4[0m     [[38;5;241m0[39m, [38;5;124m'[39m[38;5;124mred[39m[38;5;124m'[39m],  [38;5;66;03m# Assign red to the lowest value (0)[39;00m
[1;32m      5[0m     [[38;5;241m1[39m, [38;5;124m'[39m[38;5;124mdarkblue[39m[38;5;124m'[39m]  [38;5;66;03m# Assign dark blue to the highest value (12)[39;00m
[1;32m      6[0m ]
[1;32m      8[0m zmin [38;5;241m=[39m [38;5;241m0[39m

[0;31mModuleNotFoundError[0m: No module named 'jupyter_dash'

